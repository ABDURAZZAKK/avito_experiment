version: "3.8"

services:

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12.2-management
    ports: 
        - "15672:15672"
        - "5672:5672"
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 10s
        timeout: 10s
        retries: 5
      

  app:
    container_name: app
    tty: true
    build: .
    volumes:
      - ./logs:/logs
      - ./assets:/assets
    env_file:
      - .env
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"
    restart: on-failure
    command: /app
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  consumer:
    tty: true
    container_name: consumer
    build: .
    env_file:
      - .env
    volumes:
      - ./assets:/assets
    restart: on-failure
    command: /consumer
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
